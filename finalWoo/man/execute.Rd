% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{execute}
\alias{execute}
\title{Execute the Study}
\usage{
execute(connectionDetails, cdmDatabaseSchema,
  cdmDatabaseName = "friendly database name",
  cohortDatabaseSchema = cdmDatabaseSchema, cohortTable = "cohort",
  oracleTempSchema = cohortDatabaseSchema, outputFolder, createProtocol = F,
  createCohorts = F, runAnalyses = F, createResultsDoc = F,
  createValidationPackage = F, analysesToValidate = NULL,
  packageResults = F, minCellCount = 5, createShiny = F,
  createJournalDocument = F, analysisIdDocument = 1, verbosity = "INFO",
  cdmVersion = 5)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{cdmDatabaseName}{Shareable name of the database}

\item{cohortDatabaseSchema}{Schema name where intermediate data can be stored. You will need to have
write priviliges in this schema. Note that for SQL Server, this should
include both the database and schema name, for example 'cdm_data.dbo'.}

\item{cohortTable}{The name of the table that will be created in the work database schema.
This table will hold the target population cohorts used in this
study.}

\item{oracleTempSchema}{Should be used in Oracle to specify a schema where the user has write
priviliges for storing temporary tables.}

\item{outputFolder}{Name of local folder to place results; make sure to use forward slashes
(/). Do not use a folder on a network drive since this greatly impacts
performance.}

\item{createProtocol}{Creates a protocol based on the analyses specification}

\item{createCohorts}{Create the cohortTable table with the target population and outcome cohorts?}

\item{runAnalyses}{Run the model development}

\item{createResultsDoc}{Create a document containing the results of each prediction}

\item{createValidationPackage}{Create a package for sharing the models}

\item{analysesToValidate}{A vector of analysis ids (e.g., c(1,3,10)) specifying which analysese to export into validation package. Default is NULL and all are exported.}

\item{packageResults}{Should results be packaged for later sharing?}

\item{minCellCount}{The minimum number of subjects contributing to a count before it can be included 
in packaged results.}

\item{createShiny}{Create a shiny app with the results}

\item{createJournalDocument}{Do you want to create a template journal document populated with results?}

\item{analysisIdDocument}{Which Analysis_id do you want to create the document for?}

\item{verbosity}{Sets the level of the verbosity. If the log level is at or higher in priority than the logger threshold, a message will print. The levels are:
\itemize{
\item{DEBUG}{Highest verbosity showing all debug statements}
\item{TRACE}{Showing information about start and end of steps}
\item{INFO}{Show informative information (Default)}
\item{WARN}{Show warning messages}
\item{ERROR}{Show error messages}
\item{FATAL}{Be silent except for fatal errors}
}}

\item{cdmVersion}{The version of the common data model}
}
\description{
Execute the Study
}
\details{
This function executes the finalWoo Study.
}
\examples{
\dontrun{
connectionDetails <- createConnectionDetails(dbms = "postgresql",
                                             user = "joe",
                                             password = "secret",
                                             server = "myserver")

execute(connectionDetails,
        cdmDatabaseSchema = "cdm_data",
        cdmDatabaseName = 'shareable name of the database'
        cohortDatabaseSchema = "study_results",
        cohortTable = "cohort",
        oracleTempSchema = NULL,
        outputFolder = "c:/temp/study_results", 
        createProtocol = T,
        createCohorts = T,
        runAnalyses = T,
        createResultsDoc = T,
        createValidationPackage = T,
        packageResults = F,
        minCellCount = 5,
        createShiny = F,
        verbosity = "INFO",
        cdmVersion = 5)
}

}
