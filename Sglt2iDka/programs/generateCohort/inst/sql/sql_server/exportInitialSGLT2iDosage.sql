{@i == 1}?{
  IF OBJECT_ID('@target_database_schema.@target_table') IS NOT NULL
    DROP TABLE @target_database_schema.@target_table;

  CREATE TABLE @target_database_schema.@target_table (
    DB  VARCHAR(10),
    COHORT_DEFINITION_ID  INT,
    COHORT_OF_INTEREST  VARCHAR(500),
    T2DM  VARCHAR(10),
    CENSOR  INT,
    DKA   INT,
    DOSE_STRENGTH VARCHAR(100),
    STAT_TYPE   VARCHAR(200),
    STAT  INT,
    STAT_PCT  FLOAT
  );
}

IF OBJECT_ID('tempdb..##qualified_events') IS NOT NULL
  DROP TABLE tempdb..##qualified_events;

IF OBJECT_ID('tempdb..##qualified_events_DKA') IS NOT NULL
  DROP TABLE tempdb..##qualified_events_DKA;

IF OBJECT_ID('tempdb..##TEMP_DATA') IS NOT NULL
  DROP TABLE tempdb..##TEMP_DATA;


/*Pull DKA people of interest*/
IF XACT_STATE() = 1 COMMIT; CREATE TABLE  #qualified_events
  WITH (LOCATION = USER_DB, DISTRIBUTION = HASH(person_id)) AS
SELECT 	'@dbID' AS DB,
		c.COHORT_DEFINITION_ID,
		u.COHORT_OF_INTEREST,
		u.T2DM,
		u.CENSOR,
		c.SUBJECT_ID AS PERSON_ID,
		c.COHORT_START_DATE,
		c.COHORT_END_DATE,
		p.GENDER_CONCEPT_ID AS GENDER_CONCEPT_ID,
		YEAR(COHORT_START_DATE) - p.YEAR_OF_BIRTH AS AGE,
		op.OBSERVATION_PERIOD_START_DATE,
		op.OBSERVATION_PERIOD_END_DATE
	FROM @target_database_schema.@cohort_universe u
		JOIN @target_database_schema.@cohort_table c
			ON c.COHORT_DEFINITION_ID = u.COHORT_DEFINITION_ID
		JOIN @cdm_database_schema.PERSON p
			ON p.PERSON_ID = c.SUBJECT_ID
		JOIN @cdm_database_schema.OBSERVATION_PERIOD op
			ON op.PERSON_ID = c.SUBJECT_ID
			AND c.COHORT_START_DATE BETWEEN op.OBSERVATION_PERIOD_START_DATE AND op.OBSERVATION_PERIOD_END_DATE
	WHERE u.EXPOSURE_COHORT = 1
	AND u.FU_STRAT_ITT_PP0DAY = 1;



IF XACT_STATE() = 1 COMMIT; CREATE TABLE  #qualified_events_DKA
  WITH (LOCATION = USER_DB, DISTRIBUTION = HASH(person_id)) AS
SELECT e.DB, e.COHORT_DEFINITION_ID, e.COHORT_OF_INTEREST, e.T2DM, e.CENSOR, e.PERSON_ID, e.COHORT_START_DATE, e.COHORT_END_DATE, e.GENDER_CONCEPT_ID, e.AGE,
	MAX(CASE WHEN c.COHORT_DEFINITION_ID IS NULL THEN 0 ELSE 1 END) AS DKA,
	MIN(c.COHORT_START_DATE) AS DKA_INDEX_DATE
FROM #qualified_events e
	LEFT OUTER JOIN @target_database_schema.@cohort_table c
		ON c.SUBJECT_ID = e.PERSON_ID
		AND c.COHORT_DEFINITION_ID = 200 /*DKA (IP & ER)*/
		AND c.COHORT_START_DATE > e.COHORT_START_DATE  /*ITT for DKA*/
		AND c.COHORT_START_DATE BETWEEN e.OBSERVATION_PERIOD_START_DATE AND e.OBSERVATION_PERIOD_END_DATE  /*ITT for DKA*/
GROUP BY e.DB, e.COHORT_DEFINITION_ID, e.COHORT_OF_INTEREST, e.T2DM, e.CENSOR, e.PERSON_ID, e.COHORT_START_DATE, e.COHORT_END_DATE, e.GENDER_CONCEPT_ID, e.AGE;



WITH CTE_SGLT2I AS (
	SELECT COHORT_DEFINITION_ID, COHORT_OF_INTEREST, T2DM, CENSOR
	FROM @target_database_schema.@cohort_universe u
	WHERE u.EXPOSURE_COHORT = 1
	AND u.FU_STRAT_ITT_PP0DAY = 1
	AND u.COHORT_OF_INTEREST IN (
		'Empagliflozin','Dapagliflozin','Canagliflozin'
	)
),
CTE_COHORT AS (
	SELECT *
	FROM #qualified_events_DKA
),
CTE_CODE_LIST AS (
  /*Bucket code list into dosages of interest*/
	SELECT CODE_LIST_NAME, CODE_LIST_DESCRIPTION, CONCEPT_ID, CONCEPT_NAME,
		CASE
			WHEN AMOUNT_VALUE = 150 THEN 'OTHER'
			WHEN AMOUNT_VALUE = 50 THEN 'OTHER'
			WHEN AMOUNT_VALUE = 12.5 THEN 'OTHER'
			WHEN CODE_LIST_NAME = 'Empagliflozin' AND AMOUNT_VALUE = 5 THEN 'OTHER'
			WHEN AMOUNT_VALUE IS NOT NULL THEN CAST(AMOUNT_VALUE AS VARCHAR(10))
			WHEN CONCEPT_NAME LIKE '% 150 MG%' THEN 'OTHER'
			WHEN CONCEPT_NAME LIKE '% 50 MG%' THEN 'OTHER'
			WHEN CONCEPT_NAME LIKE '% 12.5 MG%' THEN 'OTHER'
			WHEN CONCEPT_NAME LIKE '% 25 MG%' THEN '25'
			WHEN CONCEPT_NAME LIKE '% 10 MG%' THEN '10'
			WHEN CODE_LIST_NAME = 'Empagliflozin' AND CONCEPT_NAME LIKE '% 5 MG%' THEN 'OTHER'
			WHEN CONCEPT_NAME LIKE '% 5 MG%' THEN '5'
			WHEN AMOUNT_VALUE IS NULL THEN 'OTHER'
			ELSE 'ERROR'
		END AS AMOUNT_VALUE
	FROM @target_database_schema.@code_list cl
		JOIN @cdm_database_schema.DRUG_STRENGTH ds
			ON ds.DRUG_CONCEPT_ID = cl.CONCEPT_ID
			AND ds.INGREDIENT_CONCEPT_ID IN (
				45774751, /*EMPA*/
				44785829, /*Dapa*/
				43526465  /*Cana*/
			)
	WHERE CODE_LIST_NAME IN (
		'Canagliflozin','Dapagliflozin','Empagliflozin'
	)
),
CTE_UNIVERSE AS (
	SELECT DISTINCT s.*, 1 AS DKA, cl.AMOUNT_VALUE
	FROM CTE_SGLT2I s
		JOIN CTE_CODE_LIST cl
			ON s.COHORT_OF_INTEREST = cl.CODE_LIST_NAME
),
CTE_TOTALS AS (
SELECT c.DB, u.COHORT_DEFINITION_ID, u.COHORT_OF_INTEREST, u.T2DM, u.CENSOR, c.DKA,
	NULL AS DOSE_STRENGTH,
	'Total N' AS STAT_TYPE,
	COUNT(DISTINCT c.PERSON_ID)  AS STAT,
	1.00 AS STAT_PCT
FROM CTE_SGLT2I u
	LEFT OUTER JOIN CTE_COHORT c
		ON c.COHORT_DEFINITION_ID = u.COHORT_DEFINITION_ID
		WHERE c.DKA = 1
GROUP BY c.DB, u.COHORT_DEFINITION_ID, u.COHORT_OF_INTEREST, u.T2DM, u.CENSOR, c.DKA
)
SELECT *
INTO #TEMP_DATA
FROM (
  SELECT *
  FROM CTE_TOTALS
  UNION ALL
  SELECT d.DB, u.COHORT_DEFINITION_ID, u.COHORT_OF_INTEREST, u.T2DM, u.CENSOR, u.DKA,
  	u.AMOUNT_VALUE AS DOSE_STRENGTH,
  	'Dose Strength' AS STAT_TYPE,
  	COUNT(de.PERSON_ID) AS STAT,
  	COUNT(de.PERSON_ID)*1.0/t.STAT AS STAT_PCT
  FROM CTE_UNIVERSE u
  	LEFT OUTER JOIN #qualified_events_DKA d
  		ON d.COHORT_DEFINITION_ID = u.COHORT_DEFINITION_ID
  		AND d.DKA = u.DKA
  	LEFT OUTER JOIN CTE_CODE_LIST cl
  		ON cl.AMOUNT_VALUE = u.AMOUNT_VALUE
  		AND cl.CODE_LIST_NAME = u.COHORT_OF_INTEREST
  	LEFT OUTER JOIN @cdm_database_schema.DRUG_EXPOSURE de
  		ON de.PERSON_ID = d.PERSON_ID
  		AND de.DRUG_EXPOSURE_START_DATE = d.COHORT_START_DATE
  		AND de.DRUG_CONCEPT_ID IN (
  			SELECT CONCEPT_ID FROM CTE_CODE_LIST
  		)
  		AND cl.CONCEPT_ID = de.DRUG_CONCEPT_ID
  	LEFT OUTER JOIN CTE_TOTALS t
  		ON t.COHORT_DEFINITION_ID = u.COHORT_DEFINITION_ID
  GROUP BY d.DB, u.COHORT_DEFINITION_ID, u.COHORT_OF_INTEREST, u.T2DM, u.CENSOR, u.DKA, u.AMOUNT_VALUE, t.STAT
) z;


INSERT INTO @target_database_schema.@target_table (DB, COHORT_DEFINITION_ID, COHORT_OF_INTEREST, T2DM, CENSOR, DKA, DOSE_STRENGTH, STAT_TYPE, STAT, STAT_PCT)
SELECT DB, COHORT_DEFINITION_ID, COHORT_OF_INTEREST, T2DM, CENSOR, DKA, DOSE_STRENGTH, STAT_TYPE, STAT, STAT_PCT
FROM #TEMP_DATA;
